import"./Task-B0zBud2q.js";import{c as N,e as x,o as i,g as P,a as d,d as a,B as L}from"./vue.esm-bundler-BDMoQPGI.js";import{P as w}from"./PureTaskList-CIzOGEUF.js";import{d as E}from"./pinia-DffANPsZ.js";import{_ as b}from"./_plugin-vue_export-helper-DlAUqK2U.js";import{w as A,a as k}from"./index-DLz49pOH.js";const K=[{id:"1",title:"Something",state:"TASK_INBOX"},{id:"2",title:"Something more",state:"TASK_INBOX"},{id:"3",title:"Something else",state:"TASK_INBOX"},{id:"4",title:"Something again",state:"TASK_INBOX"}],$=E({id:"taskbox",state:()=>({tasks:K,status:"idle",error:null}),actions:{archiveTask(e){const s=this.tasks.find(t=>t.id===e);s&&(s.state="TASK_ARCHIVED")},pinTask(e){const s=this.tasks.find(t=>t.id===e);s&&(s.state="TASK_PINNED")}},getters:{getFilteredTasks:e=>e.tasks.filter(t=>t.state==="TASK_INBOX"||t.state==="TASK_PINNED")}}),I={components:{PureTaskList:w},name:"TaskList",setup(){const e=$();return{tasks:N(()=>e.getFilteredTasks),archivedTask:l=>e.archiveTask(task),pinnedTask:l=>e.pinnedTask(task)}}};function O(e,s,t,c,l,B){const p=x("PureTaskList");return i(),P(p,{tasks:c.tasks,onArchiveTask:e.archivetask,onPinTask:e.pintask},null,8,["tasks","onArchiveTask","onPinTask"])}const D=b(I,[["render",O]]);I.__docgenInfo={displayName:"TaskList",exportName:"default",description:"",tags:{},sourceFiles:["C:/xampp/htdocs/storybook_tutorial/taskbox/src/components/TaskList.vue"]};const y={name:"PureInboxScreen",components:{TaskList:D},props:{error:{type:Boolean,default:!1}}},X={key:0,class:"page lists-show"},C={key:1,class:"page lists-show"};function F(e,s,t,c,l,B){const p=x("TaskList");return i(),d("div",null,[t.error?(i(),d("div",X,s[0]||(s[0]=[a("div",{class:"wrapper-message"},[a("span",{class:"icon-face-sad"}),a("p",{class:"title-message"},"Oh no!"),a("p",{class:"subtitle-message"},"Something went wrong")],-1)]))):(i(),d("div",C,[s[1]||(s[1]=a("nav",null,[a("h1",{class:"title-page"},"Taskbox")],-1)),L(p)]))])}const V=b(y,[["render",F]]);y.__docgenInfo={displayName:"PureInboxScreen",exportName:"default",description:"",tags:{},props:[{name:"error",type:{name:"boolean"},defaultValue:{func:!1,value:"false"}}],sourceFiles:["C:/xampp/htdocs/storybook_tutorial/taskbox/src/components/PureInboxScreen.vue"]};const G={component:V,title:"PureInboxScreen",tags:["autodocs"]},n={},o={args:{error:!0}},r={play:async({canvasElement:e})=>{const s=A(e);await k.click(s.getByLabelText("pinTask-1")),await k.click(s.getByLabelText("pinTask-3"))}};var m,u,T;n.parameters={...n.parameters,docs:{...(m=n.parameters)==null?void 0:m.docs,source:{originalSource:"{}",...(T=(u=n.parameters)==null?void 0:u.docs)==null?void 0:T.source}}};var f,_,g;o.parameters={...o.parameters,docs:{...(f=o.parameters)==null?void 0:f.docs,source:{originalSource:`{
  args: {
    error: true
  }
}`,...(g=(_=o.parameters)==null?void 0:_.docs)==null?void 0:g.source}}};var h,S,v;r.parameters={...r.parameters,docs:{...(h=r.parameters)==null?void 0:h.docs,source:{originalSource:`{
  play: async ({
    canvasElement
  }) => {
    const canvas = within(canvasElement);
    // Simulates pinning the first task
    await fireEvent.click(canvas.getByLabelText('pinTask-1'));
    // Simulates pinning the third task
    await fireEvent.click(canvas.getByLabelText('pinTask-3'));
  }
}`,...(v=(S=r.parameters)==null?void 0:S.docs)==null?void 0:v.source}}};const J=["Default","Error","WithInteractions"];export{n as Default,o as Error,r as WithInteractions,J as __namedExportsOrder,G as default};
